一、静态方法
    被static修饰的方法就是静态方法
	优点：通过类名直接访问，无需创建对象，因此在某种程度上可以节省堆空间
	分析方法是否需要修改为静态方法的原则：是否访问了对象数据。是否上下文相关
	特点：静态方法属于类，因此他随着类的加载而加载，早于对象加载
	静态方法和成员方法的区别：
		1.静态方法属于类，静态方法能被类及对象方法；成员方法属于对象，只能被对象访问
		2.静态方法随着类的加载而加载；成员方法随着对象的加载而加载
		3.静态方法不能访问成员变量，但能访问静态变量；成员方法能访问成员变量，也能访问静态变量 
		
二、静态变量
	被static修饰的变量，就是静态变量
	静态变量属于类，能被类直接访问，也能被对象访问，而且是所有对象共享的数据
	优点：因为静态变量能被所有的对象共享，因此可以不将共享的数据放在每个对象，单独放在静态方法区中，节省了堆空间
	静态变量和成员变量的区别：
		1.存储区域不同：静态变量存储在静态方法区中；成员变量存储在堆区中
		2.加载时机不同：静态变量随着类的加载而加载；成员变量随着对象的加载而加载
		3.共享范围不同：静态变量被所有对象共享；成员变量属于各自对象
		4.方法访问不同：静态变量即能被静态方法访问，也能被成员方法访问；成员变量只能被成员方法访问
		5.消亡方式不同：静态变量随着类的消亡而消亡;成员变量被java的GC机制在合适的时机回收
	

三、静态代码块
    静态代码块属于类，先于构造方法执行，随着类的加载而加载，但只执行一次
	开发中应用：jdbc链接数据库的注册驱动
	格式:
	static{
		System.out.println("静态代码块执行....");
	}

总结：
父类静态变量>父类静态代码块>=父类静态方法>子类静态变量>子类静态代码块>=子类静态方法>成员变量>构造方法>成员方法
1.父类加载要先于子类
2.静态加载要先于非静态
